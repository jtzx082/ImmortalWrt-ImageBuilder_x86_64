# This is a basic workflow to help you get started with Actions

name: Generate x86_64-24.10.0-rc4 immortalwrt Firmware

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      release: 
        description: 将编译出的镜像上传到 Release
        required: false
        default: 'true'
      LAN_IP:
        description: 'LAN IP'
        required: true
        default: '192.168.5.1'
        type: choice
        options:
          - '192.168.5.1'    
          - '192.168.6.1' 
          - '192.168.8.1' 
          - '192.168.9.1' 
          - '192.168.10.1'

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  DOWNLOAD_BASE: https://downloads.immortalwrt.org
  VENDOR: immortalwrt
  VERSION: 24.10.0-rc4

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Generate:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Initialization Environment
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install build-essential libncurses5-dev libncursesw5-dev zlib1g-dev gawk git gettext libssl-dev xsltproc rsync wget unzip qemu-utils mkisofs
          sudo timedatectl set-timezone "Asia/Shanghai"
      - name: Setup Environment Variables
        run: |
          echo "DATE=$(TZ=UTC-8 date +%Y%m%d)" >> $GITHUB_ENV
          echo "DATETIME=$(TZ=UTC-8 date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v4
        with: 
          path: origin

      - name: Download Image Builder
        run: |
          wget $DOWNLOAD_BASE/releases/$VERSION/targets/x86/64/$VENDOR-imagebuilder-$VERSION-x86-64.Linux-x86_64.tar.xz
          tar -xvf $VENDOR-imagebuilder-$VERSION-x86-64.Linux-x86_64.tar.xz
          rm -rf $VENDOR-imagebuilder-$VERSION-x86-64.Linux-x86_64.tar.xz
          cp -r $GITHUB_WORKSPACE/origin/* $GITHUB_WORKSPACE/$VENDOR-imagebuilder-$VERSION-x86-64.Linux-x86_64/
      
      - name: Download External Packages
        working-directory: ${{ env.VENDOR }}-imagebuilder-${{ env.VERSION }}-x86-64.Linux-x86_64
        run: |
          cat external-package-urls23.05.txt | xargs wget -P packages
          cd ./packages/
          ls *.tar.gz | xargs -n1 tar xzvf
          rm *tar.gz
      
      - name: Run Patch and DIY Scripts
        working-directory: ${{ env.VENDOR }}-imagebuilder-${{ env.VERSION }}-x86-64.Linux-x86_64
        run: |
          sed -i "s/192\.168\.[0-9]*\.[0-9]*/${{ github.event.inputs.LAN_IP }}/g" files/etc/uci-defaults/99-init-settings
          bash scripts/builder-patch.sh
          bash scripts/clash.sh
          bash scripts/zsh.sh

      - name: Generate Firmware
        working-directory: ${{ env.VENDOR }}-imagebuilder-${{ env.VERSION }}-x86-64.Linux-x86_64
        run: |
          bash build.sh

      - name: Upload Firmware to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.VENDOR }}-${{ env.VERSION }}-x86_64-images-${{ env.DATETIME }}
          path: ${{ env.VENDOR }}-imagebuilder-${{ env.VERSION }}-x86-64.Linux-x86_64/bin/targets/x86/64/*

      - name: Upload Firmware to Release
        if: github.event.inputs.release == 'true'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: ${{ env.VENDOR }}-imagebuilder-${{ env.VERSION }}-x86-64.Linux-x86_64/bin/targets/x86/64/*
          asset_name: ${{ github.event.repository.name }}-${{ github.sha }}
          tag: ${{ env.VENDOR }}-${{ env.VERSION }}-x86_64-${{ env.DATETIME }}
          overwrite: true
          body: |
            地址：${{ github.event.inputs.LAN_IP }}
          
          
      - name: Delete Old Releases
        uses: dev-drprasad/delete-older-releases@master
        with:
          keep_latest: 8  
          delete_tags: true
          
      - name: Delete Old Workflows
        uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 0
          keep_minimum_runs: 2
